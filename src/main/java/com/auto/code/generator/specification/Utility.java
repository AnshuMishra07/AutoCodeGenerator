package com.auto.code.generator.specification;

import java.io.File;
import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLClassLoader;

import org.apache.commons.lang3.StringUtils;

import com.auto.code.generator.core.Compiler;
import com.auto.code.generator.core.Constant;

/**
 * @author Anshu Mishra
 *
 */
public class Utility {

	public static String constructCamelCase(String name) {
		return name.substring(0, 1).toUpperCase() + name.substring(1);

	}

	public static String constructVariable(String name) {
		return name.substring(0, 1).toLowerCase() + name.substring(1);

	}

	public static String[] getUrlPathVariable(String url) {
		String[] arr = null;
		if (url != null && url.contains("{")) {
			arr = StringUtils.substringsBetween(url, "{", "}");

		}
		return arr;

	}

	public static String getPathFromPackageName(String packageName) {
		if (StringUtils.isNotEmpty(packageName)) {
			String separator = System.getProperty(Constant.FILE_SEPRATOR);
			packageName = StringUtils.replace(packageName, Constant.CURRENT_DIR, separator);
		}
		return packageName;
	}

	public static void compileClasses(ApiSpecification specification, String packageName, String className,
			String autoGeneRatedFilePath) {
		String separator = System.getProperty(Constant.FILE_SEPRATOR);
		new Compiler().compile(autoGeneRatedFilePath + Utility.getPathFromPackageName(packageName) + separator
				+ className + Constant.JAVA_EXT, autoGeneRatedFilePath + Constant.TARGET_DIR);
	}

	public static Class getAppClasses(ApiSpecification specification, String classType, String autoGeneRatedFilePath) {
		Class loadedClass = null;
		URLClassLoader classL = null;
		try {
			if (classType.startsWith("java")) {
				loadedClass = Class.forName(classType);
			} else {
				classL = new URLClassLoader(
						new URL[] { new File(autoGeneRatedFilePath + Constant.TARGET_DIR).toURI().toURL() });
				loadedClass = classL.loadClass(classType);
				try {
					classL.close();
				} catch (IOException e) {
					e.printStackTrace();
				}
			}

		} catch (MalformedURLException e) {
			e.printStackTrace();
		} catch (ClassNotFoundException e) {
			e.printStackTrace();
		}
		return loadedClass;
	}

}
